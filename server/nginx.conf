# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log error;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    # 環境によって10000ほどまでいけるかと
    worker_connections 1024;
}

http {
    fastcgi_buffers 32 256k;
    fastcgi_buffer_size 256k;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    server_tokens off;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # 流量制限
    # TODO 一時的にコメントアウト
    #limit_req_zone $binary_remote_addr zone=flow_restriction:10m rate=10r/s;

    server {

        listen        80;
        server_name   default;

        # This is the folder that index.php is in
        root /var/www/phalcon/public;
        index index.php index.html index.htm;

        charset utf-8;
        client_max_body_size 100M;
        fastcgi_read_timeout 1800;

        # ルートに来た場合(完全一致)はindex.htmlに渡す
        # try_filesを通過しないため高速に
        location = / {
            try_files /index.html /dev/null =404;
        }

        # 管理者用
        # try_filesを通過しないため高速に
        location = /admin {
            try_files /admin.html /dev/null =404;
        }

        # Represents the root of the domain
        # http://localhost:8000/[index.php]
        location / {

            # Matches URLS `$_GET['_url']`
            try_files $uri $uri/ /index.php?_url=$uri&$args;
        }

        # ネストされるので、修正
        # location ~ [^/]\.php(/|$) {
        location ~ [^/]\.php(/|$) {

            # 流量制限2
            # API側に対するアクセスのみ制限する。フロントエンドは制限しない
            # TODO 一時的にコメントアウト
            # limit_req zone=flow_restriction burst=10;

            # Ubuntu and PHP7.0-fpm in socket mode
            # This path is dependent on the version of PHP install
            fastcgi_pass  unix:/var/run/php-fpm/www.sock;

            # Alternatively you use PHP-FPM in TCP mode (Required on Windows)
            # You will need to configure FPM to listen on a standard port
            # https://www.nginx.com/resources/wiki/start/topics/examples/phpfastcgionwindows/
            # fastcgi_pass  127.0.0.1:9000;

            fastcgi_index /index.php;

            include fastcgi_params;
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }

            fastcgi_param PATH_INFO       $fastcgi_path_info;
            # fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
            # and set php.ini cgi.fix_pathinfo=0

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

            fastcgi_hide_header X-Powered-By;
        }

        # setup https with ALB
        # http to https ここにしないとバグる/ = httpじゃないとnullったときとかに死ぬ
        if ($http_x_forwarded_proto = http) {
            return 301 https://$host$request_uri;
        }

        location ~ /\.ht {
            deny all;
        }

        # 静的ファイルの設定。キャッシュしない
        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires       -1;
            log_not_found off;
            access_log    off;
        }

        # Better website experience for IE users
        add_header X-UA-Compatible "IE=Edge,chrome=1";

        # Deny showing resource into iframe
        add_header X-Frame-Options DENY;

        # Disable autodetect Conntent-Type for IE users
        add_header X-Content-Type-Options nosniff;

        # Activates the built-XSS-defense for IE users
        add_header X-XSS-Protection "1; mode=block;";

        # cache-control
        add_header Cache-Control "no-cache, no-store";
        add_header Pragma "no-cache";

        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Range, Content-Disposition, Content-Type" always;
    }
}
